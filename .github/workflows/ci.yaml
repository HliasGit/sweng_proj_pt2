name: C++ CI

# on the following actions perform the specified operations
on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true  # Ensure submodules are checked out

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y mpich \
        build-essential \
            uuid-dev \
            libgpgme-dev \
            squashfs-tools \
            libseccomp-dev \
            wget \
            pkg-config \
            git \
            cryptsetup \
            sshpass 

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1

    - name: Setup backup workaround for sudo
      run: sudo chown root /bin/tar && sudo chmod u+s /bin/tar 

    - name: Build project
      run: |
        cd project
        chmod +x ./build.sh
        ./build.sh
    
    - name: Run tests inside the build folder
      run: |
        cd project/build
        ./test_multiplication
      
    - name: Cache Singularity
      id: cache-singularity
      uses: actions/cache@v2
      with:
        path: /home/runner/work/sweng_proj_pt2/sweng_proj_pt2/singularity-3.8.7/builddir
        key: ${{ runner.os }}-singularity-${{ env.VERSION }}
        restore-keys: |
          ${{ runner.os }}-singularity

    - name: Cache Singularity libexec
      id: cache-singularity-libexec
      uses: actions/cache@v2
      with:
        path: /usr/local/libexec/singularity
        key: ${{ runner.os }}-singularity-libexec-${{ env.VERSION }}
        restore-keys: |
          ${{ runner.os }}-singularity-libexec

    - name: Cache Singularity bin
      id: cache-singularity-bin
      uses: actions/cache@v2
      with:
        path: /usr/local/bin/singularity 
        key: ${{ runner.os }}-singularity-bin-${{ env.VERSION }}
        restore-keys: |
          ${{ runner.os }}-singularity-bin


    - name: Cache Singularity var
      id: cache-singularity-var
      uses: actions/cache@v2
      with:
        path: /usr/local/var/singularity 
        key: ${{ runner.os }}-singularity-var-${{ env.VERSION }}
        restore-keys: |
          ${{ runner.os }}-singularity-var

    - name: Cache Singularity conf 
      id: cache-singularity-conf
      uses: actions/cache@v2
      with:
        path: /usr/local/etc/singularity
        key: ${{ runner.os }}-singularity-conf-${{ env.VERSION }}
        restore-keys: |
          ${{ runner.os }}-singularity-conf
          
    # Here we should put two conditions     
    - if: ${{ steps.cache-singularity-var.outputs.cache-hit != 'true' || steps.cache-singularity.outputs.cache-hit != 'true' || steps.cache-singularity-libexec.outputs.cache-hit != 'true' || steps.cache-singularity-bin.outputs.cache-hit != 'true' || steps.cache-singularity-conf.outputs.cache-hit != 'true'}}
      name: Install Singularity (use cached download if available)
      run: |
        export VERSION=3.8.7 && # adjust this as necessary 
        wget https://github.com/hpcng/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz \
        && sudo tar -xzf singularity-${VERSION}.tar.gz \
        && cd singularity-${VERSION} \
        && sudo ./mconfig \
        && sudo make -C builddir \
        && sudo make -C builddir install

    - name: Check Singularity version
      run: |
        sudo singularity-3.8.7/builddir/singularity --version
        

    - name: Build Singularity container
      run: |
        sudo singularity-3.8.7/builddir/singularity build my_project.sif Singularity.def
    
    
    - name: SSH to remote server
     env:
       SSHPASS: ${{ secrets.galileo}}
     run: |
       sshpass -e ssh -o StrictHostKeyChecking=no -tt a08trb66@login.g100.cineca.it
       exit
       ssh-keygen -f "$HOME/.ssh/known_hosts" -R "login.g100.cineca.it"
       sshpass -e scp my_project.sif a08trb66@login.g100.cineca.it:/my_project.sif
       ssh-keygen -f "$HOME/.ssh/known_hosts" -R "login.g100.cineca.it"
       sshpass -e ssh -o StrictHostKeyChecking=no -tt a08trb66@login.g100.cineca.it
       ls
       rm -rf sweng_proj_pt2
       git clone https://github.com/HliasGit/sweng_proj_pt2.git
       mv my_project.sif sweng_proj_pt2/my_project.sif
       chmod +x sweng_proj_pt2/project/job.sh 
       sbatch sweng_proj_pt2/project/job.sh  
       squeue --me
       exit      


